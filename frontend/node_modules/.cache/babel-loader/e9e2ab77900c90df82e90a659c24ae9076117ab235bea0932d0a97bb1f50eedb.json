{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo-app\\\\frontend\\\\src\\\\components\\\\TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"All\");\n  useEffect(() => {\n    fetch(\"http://localhost:5000/todos\").then(res => res.json()).then(data => setTodos(data));\n  }, []);\n  const addTodo = text => {\n    fetch(\"http://localhost:5000/todos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    }).then(res => res.json()).then(newTodo => setTodos([...todos, newTodo]));\n  };\n  const deleteTodo = id => {\n    fetch(`http://localhost:5000/todos/${id}`, {\n      method: \"DELETE\"\n    }).then(() => setTodos(todos.filter(todo => todo.id !== id)));\n  };\n  const filteredTodos = todos.filter(todo => {\n    if (filter === \"Completed\") return todo.completed;\n    if (filter === \"Active\") return !todo.completed;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new task\",\n      onKeyDown: e => e.key === \"Enter\" && addTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter(\"All\"),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter(\"Completed\"),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter(\"Active\"),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        deleteTodo: deleteTodo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"IZtq0t8YNU2oyqlHsLY6ZGpgRag=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","TodoItem","jsxDEV","_jsxDEV","TodoApp","_s","todos","setTodos","filter","setFilter","fetch","then","res","json","data","addTodo","text","method","headers","body","JSON","stringify","newTodo","deleteTodo","id","todo","filteredTodos","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onKeyDown","e","key","target","value","onClick","map","_c","$RefreshReg$"],"sources":["D:/todo-app/frontend/src/components/TodoApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nfunction TodoApp() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [filter, setFilter] = useState(\"All\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/todos\")\r\n      .then((res) => res.json())\r\n      .then((data) => setTodos(data));\r\n  }, []);\r\n\r\n  const addTodo = (text) => {\r\n    fetch(\"http://localhost:5000/todos\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ text }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((newTodo) => setTodos([...todos, newTodo]));\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    fetch(`http://localhost:5000/todos/${id}`, { method: \"DELETE\" })\r\n      .then(() => setTodos(todos.filter((todo) => todo.id !== id)));\r\n  };\r\n\r\n  const filteredTodos = todos.filter((todo) => {\r\n    if (filter === \"Completed\") return todo.completed;\r\n    if (filter === \"Active\") return !todo.completed;\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>To-Do List</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a new task\"\r\n        onKeyDown={(e) => e.key === \"Enter\" && addTodo(e.target.value)}\r\n      />\r\n      <div>\r\n        <button onClick={() => setFilter(\"All\")}>All</button>\r\n        <button onClick={() => setFilter(\"Completed\")}>Completed</button>\r\n        <button onClick={() => setFilter(\"Active\")}>Active</button>\r\n      </div>\r\n      <ul>\r\n        {filteredTodos.map((todo) => (\r\n          <TodoItem key={todo.id} todo={todo} deleteTodo={deleteTodo} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}